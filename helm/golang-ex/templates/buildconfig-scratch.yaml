kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: {{ .Values.s2i_runtime_image_namespace | quote }}
  annotations:
    description: Defines how to build the application
spec:
  source:
    type: Git
    git:
      uri: {{ .Values.source_repository_url | quote }}
      ref: {{ .Values.source_repository_ref | quote }}
    contextDir: {{ .Values.context_dir | quote }}
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: {{ .Release.Namespace | quote }}
        name: golang:latest
  output:
    to:
      kind: ImageStreamTag
      name: {{ print .Values.name ":latest" | quote }}
  triggers:
  - type: ImageChange
  - type: ConfigChange
  - type: GitHub
    github:
      secret: {{ .Values.github_webhook_secret | default (randAlphaNum 40) | quote }}
# 
#  - type: Generic
#    generic:
#      secret: {{ .Values.generic_webhook_secret | default (randAlphaNum 40) | quote }}
#  postCommit:
#    script: npm test
apiVersion: build.openshift.io/v1
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: {{ .Values.name | quote }}
  annotations:
    description: Defines how to build the application
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: {{ print .Values.s2i_runtime_image_namespace ":latest" | quote }}
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    dockerfile: |-
      FROM scratch
      WORKDIR /usr/local/bin 
      COPY main main 
      CMD ["main"]
    images:
      - as: null
        from:
          kind: ImageStreamTag
          name: 'golang-example:latest'
          namespace: golang-example
        paths:
          - destinationDir: .
            sourcePath: /opt/app-root/src/go/bin/main
    type: Dockerfile
  strategy:
    dockerStrategy:
      from:
        kind: DockerImage
        name: scratch
    type: Docker
  successfulBuildsHistoryLimit: 5
  triggers:
  - type: ImageChange
  - type: ConfigChange
  - type: GitHub
    github:
      secret: {{ .Values.github_webhook_secret | default (randAlphaNum 40) | quote }}
# 
#  - type: Generic
#    generic:
#      secret: {{ .Values.generic_webhook_secret | default (randAlphaNum 40) | quote }}
#  postCommit:
#    script: npm test

